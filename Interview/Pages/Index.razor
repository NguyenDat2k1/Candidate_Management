@page "/"
@using Interview.Models
@using Interview.Data
@inject HomeController SendResultService
@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.Components;
@using System
@using System.IO
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging
@inject ILogger<Import> Logger
@inject IWebHostEnvironment Environment
@using System.Diagnostics
@using System.Net.Http
@inject IHttpClientFactory httpClient
@using System.Net.Http.Json;
@using System.Web;
@using System.Timers;
@using System.Globalization;

<table>
    <tr>
        <td colspan="5" align="left">
            <label style="height: 30px; width:300px; background-color:#336699 ; color:#FFFFFF ;border: solid 1px #659EC7;"> Tìm Ứng Viên</label>

        </td>
    </tr>
    <tr>



        <td>
            <input class="input-group-text" type="text" @bind-value="@search" />
        </td>
        <td>
            <input type="button" class="btn btn-primary" value="Tìm kiếm" @onclick=@Searching />
        </td>


    </tr>
    <tr>


        <td>

            <select name="Filter" @bind="@type" class="sele">
                <option value="">Vị trí:</option>
                @foreach (var tyDetails in typeDetails)
                {
                    <option value="@tyDetails.Name">@tyDetails.Name</option>
                }
            </select>


            <input type="button" class="btn btn-primary" value="Lọc" @onclick=@Filtering />
        </td>

        <td>
            <select name="Order" @bind="@Order" class="sele">
                <option value="">Sắp xếp</option>
                <option value="0">Mới nhất</option>
                <option value="1">Cũ nhất</option>

            </select>
            <input type="button" class="btn btn-primary " value="Sắp xếp" @onclick=@Ordering />
            <button class="act2_Btn"  @onclick="OnClickButton">Click me</button>



        </td>


    </tr>
</table>
<div style="@(addPV_Flg ? "" : "opacity: 0.1; transition:0.5s" );@(previewMailFlg ? "" : "opacity: 0.1; transition:0.5s" )">
    @if (userDetails == null)
    {
        <p><em>Loading...</em></p>
    }

    else if ((userFilters == null || userFilters.Count == 0) && (userOrders == null || userOrders.Count == 0) && (userSearchs == null || userSearchs.Count == 0))
    {

        <table class="table">
            <thead >
                <tr>

                    <th class="tbl">ID</th>
                    <th class="tbl">Chức Danh</th>
                    <th class="tbl">Vị trí</th>
                    <th class="tbl">Họ tên</th>
                    <th class="tbl">Số Điện thoại</th>
                    <th class="tbl">Trạng thái</th>

                    <th class="tbl">Xem chi tiết</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var uDetails in userDetails)
                {
                    <tr class="tbl1">

                        <td class="tbl">
                            @uDetails.userID
                        </td>
                        <td class="tbl">@uDetails.Role</td>
                        <td class="tbl">@uDetails.Position</td>
                        <td class="tbl">@uDetails.userName</td>
                        <td class="tbl">@uDetails.Phone</td>
                        @switch (@uDetails.Status)
                        {
                            case 0:
                                <td class="tbl">Mới nhận CV</td>
                                break;
                            case 1:
                                <td class="tbl">Loại CV</td>
                                break;
                            case 2:
                                <td class="tbl">CV được duyệt</td>
                                break;
                            case 15:
                                <td class="tbl">Đã liên lạc được sau khi duyệt CV</td>
                                break;
                            case 16:
                                <td class="tbl">Không liên lạc được sau khi duyệt CV</td>
                                break;
                            case 5:
                                <td class="tbl">Sẵn sàng để lên lịch phỏng vấn</td>
                                break;
                            case 17:
                                <td class="tbl">Đã được lên lịch phỏng vấn</td>
                                break;
                            case 18:
                                <td class="tbl">Đã được huỷ lịch phỏng vấn</td>
                                break;
                            case 19:
                                <td class="tbl">Đã trượt phỏng vấn</td>
                                break;
                            case 20:
                                <td class="tbl">Đã vượt qua phỏng vấn</td>
                                break;
                            case 21:
                                <td class="tbl">Đã được gửi offer</td>
                                break;
                            case 22:
                                <td class="tbl">Đã được gửi thư từ chối</td>
                                break;


                        }



                        <td>
                            <input type="button" class="btn btn-primary tybut" value="Gửi kết quả" @onclick="() => Judge(uDetails)" />


                        </td>




                    </tr>
                }
            </tbody>
        </table>
    }


    else if (userFilters != null && userFilters.Count != 0)
    {
        if (filterFlg)
        {
            <table class="table">
                <thead >
                    <tr>

                        <th class="tbl">ID</th>
                        <th class="tbl">Chức Danh</th>
                        <th class="tbl">Vị trí</th>
                        <th class="tbl">Họ tên</th>
                        <th class="tbl">Số Điện thoại</th>
                        <th class="tbl">Trạng thái</th>

                        <th class="tbl">Xem chi tiết</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var uDetails in userDetails)
                    {
                        <tr class="tbl1">

                            <td class="tbl">
                                @uDetails.userID
                            </td>
                            <td class="tbl">@uDetails.Role</td>
                            <td class="tbl">@uDetails.Position</td>
                            <td class="tbl">@uDetails.userName</td>
                            <td class="tbl">@uDetails.Phone</td>
                            @switch (@uDetails.Status)
                            {
                                case 0:
                                    <td class="tbl">Mới nhận CV</td>
                                    break;
                                case 1:
                                    <td class="tbl">Loại CV</td>
                                    break;
                                case 2:
                                    <td class="tbl">CV được duyệt</td>
                                    break;
                                case 15:
                                    <td class="tbl">Đã liên lạc được sau khi duyệt CV</td>
                                    break;
                                case 16:
                                    <td class="tbl">Không liên lạc được sau khi duyệt CV</td>
                                    break;
                                case 5:
                                    <td class="tbl">Sẵn sàng để lên lịch phỏng vấn</td>
                                    break;
                                case 17:
                                    <td class="tbl">Đã được lên lịch phỏng vấn</td>
                                    break;
                                case 18:
                                    <td class="tbl">Đã được huỷ lịch phỏng vấn</td>
                                    break;
                                case 19:
                                    <td class="tbl">Đã trượt phỏng vấn</td>
                                    break;
                                case 20:
                                    <td class="tbl">Đã vượt qua phỏng vấn</td>
                                    break;
                                case 21:
                                    <td class="tbl">Đã được gửi offer</td>
                                    break;
                                case 22:
                                    <td class="tbl">Đã được gửi thư từ chối</td>
                                    break;


                            }



                            <td>
                                <input type="button" class="btn btn-primary tybut" value="Gửi kết quả" @onclick="() => Judge(uDetails)" />


                            </td>




                        </tr>
                    }
                </tbody>
            </table>
        }


    }
    else if (userSearchs != null && userSearchs.Count != 0)
    {
        if (searchFlg)
        {
            <table class="table">
                <thead >
                    <tr>

                        <th class="tbl">ID</th>
                        <th class="tbl">Chức Danh</th>
                        <th class="tbl">Vị trí</th>
                        <th class="tbl">Họ tên</th>
                        <th class="tbl">Số Điện thoại</th>


                        <th class="tbl">Xem chi tiết</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var uDetails in userDetails)
                    {
                        <tr class="tbl1">

                            <td class="tbl">
                                @uDetails.userID
                            </td>
                            <td class="tbl">@uDetails.Role</td>
                            <td class="tbl">@uDetails.Position</td>
                            <td class="tbl">@uDetails.userName</td>
                            <td class="tbl">@uDetails.Phone</td>
                            <td class="tbl">@uDetails.Phone</td>


                            <td>
                                <input type="button" class="btn btn-primary tybut" value="Gửi kết quả" @onclick="() => Judge(uDetails)" />


                            </td>




                        </tr>
                    }
                </tbody>
            </table>
        }

    }

    else if (userOrders != null && userOrders.Count != 0)
    {
        if (orderFlg)
        {
            <table class="table">
                <thead >
                    <tr>

                        <th class="tbl">ID</th>
                        <th class="tbl">Chức Danh</th>
                        <th class="tbl">Vị trí</th>
                        <th class="tbl">Họ tên</th>
                        <th class="tbl">Số Điện thoại</th>


                        <th class="tbl">Xem chi tiết</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var uDetails in userDetails)
                    {
                        <tr class="tbl1">

                            <td class="tbl">
                                @uDetails.userID
                            </td>
                            <td class="tbl">@uDetails.Role</td>
                            <td class="tbl">@uDetails.Position</td>
                            <td class="tbl">@uDetails.userName</td>
                            <td class="tbl">@uDetails.Phone</td>
                            <td class="tbl">@uDetails.Phone</td>


                            <td>
                                <input type="button" class="btn btn-primary tybut" value="Gửi kết quả" @onclick="() => Judge(uDetails)" />


                            </td>




                        </tr>
                    }
                </tbody>
            </table>
        }


    }

</div>




<div id="popup" class="popup" style="@(transFlg ? "display:none": ""); position:fixed;">
    <div class="popup-content" style=" position: relative;width:40%;height:30%">
        <button class="close" @onclick=@transClose>&times;</button>
        <label>Ứng viên Intern đã qua vòng 1,vui lòng chuyển qua "Gửi Mail phỏng vấn"</label>


        <button style=" position: absolute;bottom:15px;left: 50%;transform: translate(-50%, 50%);" @onclick="transTo">
            Chuyển
        </button>
    </div>
</div>







<div id="popup" class="popup" style="@(errF_Flg ? "display:none": ""); position:fixed;">
    <div class="popup-content" style=" position: relative;width:40%;height:30%">
        <button class="close" @onclick=@Fclose>&times;</button>
        <label>Chưa chọn vị trí</label>


        <button style=" position: absolute;bottom:15px;left: 50%;transform: translate(-50%, 50%);" @onclick="Fclose">
            Đóng
        </button>
    </div>
</div>
<div id="popup" class="popup" style="@(errS_Flg ? "display:none": ""); position:fixed;">
    <div class="popup-content" style=" position: relative;width:40%;height:30%">
        <button class="close" @onclick=@Sclose>&times;</button>
        <label>Chưa nhập giá trị cần tìm</label>


        <button style=" position: absolute;bottom:15px;left: 50%;transform: translate(-50%, 50%);" @onclick="Sclose">
            Đóng
        </button>
    </div>

</div>
<div id="popup" class="popup" style="@(errO_Flg ? "display:none": ""); position:fixed;">
    <div class="popup-content" style=" position: relative;width:40%;height:30%">
        <button class="close" @onclick=@Oclose>&times;</button>
        <label>Chưa chọn kiểu sắp xếp</label>


        <button style=" position: absolute;bottom:15px;left: 50%;transform: translate(-50%, 50%);" @onclick="Oclose">
            Đóng
        </button>
    </div>
</div>
@code {



    private List<Users> userDetails=new();
    private List<typecs>? typeDetails;
    string?  text, search, statusContact, Order, Place, Body, /*BodyPreview*/ mail,  locationPV, tenUV, Reason ;
    //private List<MailRequest>? templDetails;
    int sign;
    private List<Users> userSearchs = new();
    private List<Users> userOrders = new();
    private List<Users> userFilters = new();
    DateTime timeMeeting, tgianPV;
    private bool isChecked1 = true;
    private bool isChecked2 = false;
    bool add2Flg = true;
    bool isJudge;
    bool scheduleFlg = false;
    bool filterFlg = false;
    bool orderFlg = false;
    bool searchFlg = false;
    bool cautionFlg = true;
    bool mycheck = false;
    bool judgingFlg = true;
    bool addPV_Flg = true;
    bool previewMailFlg = true;
    bool judgedFlg = false;
    MailRequest meoriquet = new MailRequest();
    bool scheBtnFlg = false;
    bool errF_Flg = true;
    bool errS_Flg = true;
    bool errO_Flg = true;
    string type = "";
    bool createMailFlg = true;
    bool createMailFailedFlg = true;
    bool transFlg = true;
    //======Check Flag=======

    private List<string> Optioners = new List<string>();
   


    private void pclose()
    {

        previewMailFlg = true;

    }
    private void transTo()
    {

    }
    private void transClose()
    {

        transFlg = true;

    }
    private Users Users = new Users();
    private void Lclose()
    {
        errS_Flg = true;

    }
    private void Fclose()
    {
        errF_Flg = true;

    }
    private void Sclose()
    {
        errS_Flg = true;

    }
    private void Oclose()
    {
        errO_Flg = true;

    }
    private void judgingClose()
    {

        judgingFlg = true;

    }
    private void judgedClose()
    {

        judgedFlg = true;

    }
    //loadlist
    protected override async Task OnInitializedAsync()
    {

        typeDetails = await SendResultService.SelectboxFilter();
        var client = httpClient.CreateClient();
        client.BaseAddress = new Uri("https://localhost:7142");
        userDetails = await client.GetFromJsonAsync<List<Users>>("/api/getAllOfUser");


    }
    private bool IsButtonActive = false;

    private void OnClickButton()
    {
        //IsButtonActive = true;
        //OnButtonTransitionEnd();
    }

    private void OnButtonTransitionEnd()
    {
        IsButtonActive = false;
    }
    //searchlist
    string temP = string.Empty;

    //searchlist
    private void Searching()
    {
        
    }
     private void Filtering()
    {
        
    }
    private void Ordering()
    {

    }
    //Filter
   
    //update tong
    private async Task Update()
    {
        userDetails = await SendResultService.getUserAll();

    }

    private void Judge(Users user)
    {


        Users = user;
        if (Users.Position == "Intern" && Users.Status == 20)
        {
            transFlg = false;
            return;
        }
        else if (Users.Position == "Intern" && Users.Status == 19)
        {
            mail = "Thư từ chối";
            createMailFailedFlg = false;
            return;
        }
        //@if (Users.Position == "Intern" && Users.typeMail == 1 && Users.Status == 20)
        //{
        //    mail = "Thư mời phỏng vấn vòng 2";
        //}
        if ((Users.Position == "fresher" || Users.Position == "Junior") && Users.typeMail == 1 && Users.Status == 20)
        {
            mail = "Thư gửi Offer công việc";
        }
        else
        {
            mail = "Thư từ chối";
            createMailFailedFlg = false;
            return;

        }
        createMailFlg = false;



    }


  
   }




